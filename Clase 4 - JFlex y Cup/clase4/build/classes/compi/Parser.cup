// ------------  Paquete e importaciones ------------
package compi;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public static String resultado = ""; 

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaración de terminales
terminal String PARENTESIS_A, PARENTESIS_C, PUNTOYCOMA;
terminal String POR, MAS;
terminal String R_MOSTRAR;
terminal String ENTERO;


//------> Declaración de no terminales
non terminal inicio;
non terminal instruccion, mostrar;
non terminal lista_instr;
non terminal expresion;

//------> PRECEDENCIA
precedence left MAS;
precedence left POR;


//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------

inicio ::= lista_instr
;

lista_instr ::= lista_instr instruccion
    | instruccion
;

instruccion ::= mostrar
;

mostrar ::= R_MOSTRAR PARENTESIS_A expresion:val PARENTESIS_C PUNTOYCOMA   {: compi.Parser.resultado = compi.Parser.resultado + func.Funcion.mostrar(val.toString()); :}
;

expresion ::= expresion:a MAS expresion:b       {: RESULT = "SUM("+a.toString()+ ","+b.toString()+")" ; :}
    | expresion:a POR expresion:b               {: RESULT = "MUL("+a.toString()+ ","+b.toString()+")" ; :}
    | ENTERO:val                                {: RESULT = val; :}
;